@using Newtonsoft.Json

@{
    ViewData["Title"] = "Search Jobs";
}
@model List<JobPostingViewModel>


@Html.Hidden("BusinessID")
@Html.Hidden("JobInfoID")
@Html.Hidden("JobPerkID")
@Html.Hidden("PerkID")
@Html.Hidden("PhoneNum")
@Html.Hidden("AddressLine1")
@Html.Hidden("AddressLine2")
@Html.Hidden("EirCode")
@Html.Hidden("Country")
@Html.Hidden("JobDescription")
@Html.Hidden("MinExperience")
@Html.Hidden("IsActive")
@Html.Hidden("Details")
@Html.Hidden("PerkName")



<!DOCTYPE html>
<html lang="en">
<body>
    <div class="text-center">
        <h1 class="display-4">Job Openings</h1>

        <form asp-controller="Job" asp-action="SearchJob" method="post" id="search-form">

            <div class="input-group">
                <div class="form-outline">
                    <input type="text" name="JobDescription" class="form-control" placeholder="Search by: Job Title, Company Name, City or County..." />
                </div>
                <button type="submit" class="btn btn-secondary">
                    <i class="fa fa-search" aria-hidden="true"></i>
                </button>
            </div>


        </form>

        @if (Model.Count == 0)
        {
            <div>
                Sorry, no jobs were found. Please try again.
            </div>
        }

        else
        {
            <div id="results-count">
                @Model.Count jobs match your search
            </div>
        }

        <div id="results-count">
        </div>



        <button id="filter-button" class="btn btn-secondary">Filter Results</button>

        <form id="filter-form" style="display: none;">
            <h5>Filter Search</h5>
            <label>Title:</label>
            <input id="filter-title" type="text" name="Title" />
            <br />
            <label for="position-type">Position Type:</label>
            <select id="position-type">
                <option value="all">All Openings</option>
                <option value="fulltime">Full-Time Openings</option>
                <option value="parttime">Part-Time Openings</option>
            </select>
            <br />
            <label>Company:</label>
            <input id="filter-company" type="text" name="Company" />
            <br />
            <label>Minimum Salary:</label>
            <input id="filter-salary" type="text" name="Salary" />
            <br />
            <label>City:</label>
            <input id="filter-city" type="text" name="City" />
            <br />
            <label>County:</label>
            <input id="filter-county" type="text" name="County" />
            <br />
@*
            <input type="hidden" id="original-list" value="@Html.Raw(JsonConvert.SerializeObject(Model))">*@

            <button id="apply-filter-button" class="btn btn-secondary" onclick="applyFilters();" type="button">Apply Filters</button>
            <button id="cancel-filter-button" class="btn btn-secondary" type="button">Cancel</button>
        </form>

        <div id="job-openings-list">
            <partial name="_JobsPartial" />
        </div>
        <div id="filtered-job-openings-list" class="hidden">
        </div>

    </div>
</body>
</html>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>

    $('#filter-button').click(function () {
        // Show or hide the list of filter options
        if ($('#filter-form').is(':visible')) {
            $('#filter-form').hide();
        } else {
            $('#filter-form').show();
            $('#filter-button').hide();
        }
    });

    $('#cancel-filter-button').click(function () {

        $('#filter-form').hide();
        $('#filter-button').show();

    });


    //function applyFilters() {
    //    event.preventDefault(); // prevent the form from being submitted
    //    var form = document.getElementById("filter-form");
    //    var formData = new FormData(form); // create an object containing the form data
    //    fetch("/Job/SearchJob", {
    //        method: "POST",
    //        body: formData // include the form data in the request body
    //    }).then(function (response) {
    //        return response.text(); // get the response as text
    //    }).then(function (html) {
    //        document.getElementById("job-openings-list").innerHTML = html; // update the job listings
    //    });
    //}

    function applyFilters() {

        var title = $('#filter-title').val();
        var company = $('#filter-company').val();
        var positiontype = $('#position-type').val();
        var minsalary = $('#filter-salary').val();
        var city = $('#filter-city').val();
        var county = $('#filter-county').val();
        ////var originalList = $('#original-list').val();
        //var originalList = JSON.parse($('#original-list').val());
        //console.log(originalList);

        $('#error-message').hide();
        $.ajax({
            type: "GET",
            url: '/Job/FilterJob',
            data: { title: title, company: company, positiontype: positiontype, minsalary: minsalary, city: city, county: county },
            //data: { title: title, company: company, positiontype: positiontype, minsalary: minsalary, city: city, county: county, originalList: originalList },
            success: function (data) {
                //$('html').html(data);
                $('#filtered-job-openings-list').html(data);

                //var count = '@ViewBag.Count';
                //$('#results-count').text(count + ' jobs match your search');

                $('#job-openings-list').addClass('hidden');
                $('#filtered-job-openings-list').removeClass('hidden');



            }
        });
    };

</script>